rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Forum collections - public read, authenticated write
    match /forum_threads/{threadId} {
      allow read: if true;  // Public read access
      allow create: if request.auth != null && request.auth.uid == request.resource.data.authorId;
      allow update: if request.auth != null && (request.auth.uid == resource.data.authorId || request.auth.token.admin == true);
      allow delete: if request.auth != null && (request.auth.uid == resource.data.authorId || request.auth.token.admin == true);
    }
    
    match /forum_replies/{replyId} {
      allow read: if true;  // Public read access
      allow create: if request.auth != null && request.auth.uid == request.resource.data.authorId;
      allow update: if request.auth != null && (request.auth.uid == resource.data.authorId || request.auth.token.admin == true);
      allow delete: if request.auth != null && (request.auth.uid == resource.data.authorId || request.auth.token.admin == true);
    }
    
    // All other collections require authentication
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
    
    // Alternative: More specific rules (uncomment when ready for production)
    /*
    // Payments collection - only the user who made the payment can read it
    match /payments/{paymentId} {
      allow read: if request.auth != null && request.auth.uid == resource.data.userId;
      allow write: if request.auth != null && request.auth.uid == request.resource.data.userId;
    }
    
    // Enrollments collection - only the enrolled user can read/write
    match /enrollments/{enrollmentId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }
    
    // Test collection - allow all authenticated users for testing
    match /test_collection/{document} {
      allow read, write: if request.auth != null;
    }
    */
  }
}
